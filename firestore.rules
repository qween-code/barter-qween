rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // User profiles - users can read all profiles but only write their own
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Items - authenticated users can read all active items
    // Only item owners can create/update/delete their own items
    match /items/{itemId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.ownerId;
      allow update: if request.auth != null && request.auth.uid == resource.data.ownerId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.ownerId;
    }
    
    // Chats - only participants can read/write
    match /chats/{chatId} {
      allow read: if request.auth != null && request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participants;
      allow update: if request.auth != null && request.auth.uid in resource.data.participants;
      allow delete: if request.auth != null && request.auth.uid in resource.data.participants;
    }
    
    // Messages - only chat participants can read/write
    match /chats/{chatId}/messages/{messageId} {
      allow read: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.senderId;
    }
    
    // Trades - only participants (from/to users) can read/write
    match /trades/{tradeId} {
      allow read: if request.auth != null && 
                    (request.auth.uid == resource.data.fromUserId || 
                     request.auth.uid == resource.data.toUserId);
      allow create: if request.auth != null && 
                      request.auth.uid == request.resource.data.fromUserId &&
                      request.resource.data.status == 'pending';
      allow update: if request.auth != null && 
                      (request.auth.uid == resource.data.fromUserId || 
                       request.auth.uid == resource.data.toUserId) &&
                      // Only allow status updates by appropriate user
                      (request.auth.uid == resource.data.toUserId || 
                       request.resource.data.status in ['cancelled', 'completed']);
    }
    
    // Reviews - anyone can read, only reviewers can write
    match /reviews/{reviewId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.reviewerId;
    }
    
    // Notifications - users can only read/write their own notifications
    match /notifications/{notificationId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow write: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
  }
}
